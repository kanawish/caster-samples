#version 100

precision mediump float;

uniform mat4 u_mvpMatrix;
uniform mat4 u_mvMatrix;
uniform vec3 u_lightPosition;

attribute vec4 a_Position;
attribute vec3 a_Normal;

// New concept, varying...
varying vec4 v_Color;

void main() {
    vec3 modelViewVertex = vec3(u_mvMatrix * a_Position);
    vec3 modelViewNormal = vec3(u_mvMatrix * vec4(a_Normal,0.0));

    vec3 vertexToLightVector = normalize(u_lightPosition - modelViewVertex);

    float normalLightAngle = max(dot(modelViewNormal,vertexToLightVector),0.1);

    gl_Position = u_mvpMatrix * a_Position;
    vec4 redColor = vec4(1.0,0.0,0.0,1.0);
    v_Color = redColor * normalLightAngle;
}